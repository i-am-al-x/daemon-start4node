#!/bin/sh                        <= Inform text editor: highlight as shell code
# The template file is copyright 2021 Alexander R Danel
# Please retain copyright notice in derived works (which may have their
# own additional copyright).
# MIT License
#
# Template for a config file that serves the development environment where the
# server is run on the developers machine and accessed as localhost 127.0.0.1.
#
# Name of template file:
#   ..../start-stop/sysconfig/node4_xxxx_-localhost-dev
#
# In "dev" environmnet, will assume startup is coordinated by a "go" script, 
# so put the customized version where that script expects to look find it:
#     ${START_STOP_DIR}/sysconfig/node4_xxxx_-localhost-dev
# The value of START_STOP_DIR is determined by the "go" script.

# Note: This script is intended to be "sourced," (not executed directly).

# vvvvvvvvvvvvvvvvvvvvvvv  Set environment variables  vvvvvvvvvvvvvvvvvvvvvvvvvv

declare MY_APP_NM="_xxxx_"
declare DNS_SHORT_NM="localhost"
declare DB_CHOICE="dev";		# dev|test|prod
declare DEV_REPOSITORY="$HOME/repos";

# for setting other vars within this file ______________________________________

# Note that when called by matching "/etc/init.d/node4_xxxx_" script, 
# the value of "$daemonName" will be set by that script,
# so that context should never result in an error here.
: ${daemonName:?"must be defined before sourcing sysconfig"}

# for both daemon-launcher and 'node' app ______________________________________
export nodeListenPort="443";

# for daemon-launcher __________________________________________________________

# The javaScript file that "node" should run.
export  nodeServerMainJs=index.js

# The directory hierarchy
declare         VAR="$HOME/var"
declare         OPT="(not applicable)"
export      LOG_DIR="$VAR/log/${daemonName}";
export      PID_DIR="$VAR/run";

# In DEV environment, the variables "WEB_ROOT_DIR", "APP_ROOT_DIR", and 
# "SERVER_DIR" might already have a value, since a "go" script might
# beneficially assign and export something in these vars.  
# Do not overwrite prior value.
# Always want to mark the variables for export. 
export  WEB_ROOT_DIR; 
export  APP_ROOT_DIR; 
export  SERVER_DIR; 
# But assign a value only to a var that is empty.
:  ${WEB_ROOT_DIR:=$DEV_REPOSITORY};
:  ${APP_ROOT_DIR:=$WEB_ROOT_DIR/$MY_APP_NM};
:    ${SERVER_DIR:=$APP_ROOT_DIR/server};

# for 'node' app _______________________________________________________________

# Here are some suggested variables that the server program might want to 
# incorporate.
export isSSL="yes";

# SSL certificate information, for 'node' app
# Only non-secure, self-signed keys for "dev" and "test" envs are in 
# the repository!  Never put actual, confidential certs in repository.
export sslCertificateDir="${DEV_REPOSITORY}/certs/${DNS_SHORT_NM}";
export sslCertPrivateDir="${DEV_REPOSITORY}/certs/${DNS_SHORT_NM}";

# The 'key' and 'cert' are required for 'https'
MY_HOSTNAME="localhost";
export ssl_cert="${sslCertificateDir}/${MY_HOSTNAME}.crt"
export  ssl_key="${sslCertPrivateDir}/${MY_HOSTNAME}.key"

# The 'ca' (certificate authority) information is optional
export ssl_ca_1=""
export ssl_ca_2=""

# additional_vars ______________________________________________________________

# (App specific config, not used by the start-stop script.)
# Set any additional env vars that will be used by the server app.
# (In template file, these are just examples.  Replace with your own.)
export               whichEnv="dev";		# dev|test|prod
export        isServerDevMode="yes";
export pathToConnectionConfig="${APP_ROOT_DIR}/configs/configDB-${DB_CHOICE}.json";

# Summary of "additional_vars"; this gets passed to 
# the "showConfig" function in the launch script "init.d/node4_xxxx_"
export additional_vars="
  whichEnv
  isServerDevMode
  pathToConnectionConfig
";
# target_hostname <= not used?

# ^^^^^^^^^^^^^^^^^  Finished setting environment variables  ^^^^^^^^^^^^^^^^^^^

